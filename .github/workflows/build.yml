name: Build APK

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Set up environment and build APK
      run: |
        set -e

        echo "[+] Installing system dependencies..."
        sudo apt update
        sudo apt install -y zip unzip libffi-dev libssl-dev \
          autoconf automake build-essential libtool pkg-config \
          zlib1g-dev openjdk-11-jdk python3-venv curl

        echo "[+] Downloading Android command line tools (with retry)..."
        ANDROID_SDK_ROOT=$HOME/android-sdk
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools"
        cd "$ANDROID_SDK_ROOT/cmdline-tools"
        for i in {1..3}; do 
          curl -sSLo tools.zip https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip && break || sleep 10
        done
        if [ ! -f tools.zip ]; then
          echo "❌ Network error: Unable to download tools.zip after retries"
          exit 1
        fi
        unzip -q tools.zip
        rm tools.zip
        mkdir -p "$ANDROID_SDK_ROOT/cmdline-tools/latest"
        mv cmdline-tools/* "$ANDROID_SDK_ROOT/cmdline-tools/latest/"

        echo "[+] Updating PATH..."
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH

        echo "[+] Verifying internet connection before sdkmanager runs..."
        ping -c 4 google.com || { echo "❌ Internet is unreachable, aborting build."; exit 1; }

        echo "[+] Accepting licenses and installing SDK packages (with retry)..."
        for i in {1..3}; do
          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses && break || sleep 10
        done
        $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager \
          "platform-tools" \
          "platforms;android-31" \
          "build-tools;31.0.0" \
          "ndk;21.4.7075529" || { echo "❌ Failed to install Android SDK components"; exit 1; }

        echo "[+] Linking build-tools manually to expected location..."
        mkdir -p ~/.buildozer/android/platform/android-sdk/build-tools
        cp -r $ANDROID_SDK_ROOT/build-tools/31.0.0 ~/.buildozer/android/platform/android-sdk/build-tools/

        echo "[+] Setting ANDROID_NDK_HOME explicitly..."
        export ANDROID_NDK_HOME=$ANDROID_SDK_ROOT/ndk/21.4.7075529
        export PATH=$ANDROID_NDK_HOME:$PATH

        echo "[+] Setting up Python and Buildozer..."
        python3 -m venv venv
        source venv/bin/activate
        pip install --upgrade pip
        pip install cython buildozer

        echo "[+] Initializing buildozer.spec if missing..."
        if [ ! -f buildozer.spec ]; then
          buildozer init
        fi

        echo "[+] Building APK..."
        buildozer android debug

    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: crypto-search-apk
        path: bin/*.apk
